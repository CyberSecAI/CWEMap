Vulnerability Report: Default SSH Public Key in Authorized_Keys File

Overview:
This report addresses a critical security vulnerability involving the presence of default SSH public keys in authorized_keys files across multiple products and vendors. This weakness allows remote attackers to gain unauthorized SSH access to affected systems by exploiting knowledge of the corresponding private key.

Affected Products:
1. VMware Photos OS OVA 1.0 (versions before 2016-08-14)
2. ExaGrid appliances (firmware before 4.8 P26)
3. Ceragon FibeAir IP-10
4. Precor touchscreen consoles (models P62, P80, and P82)

Vulnerability Details:
CVE IDs: CVE-2016-5333, CVE-2016-1561, CVE-2015-0936, CVE-2023-49224
CWE ID: CWE-798 (Use of Hard-coded Credentials)

The vulnerability stems from the inclusion of default SSH public keys in the authorized_keys file of affected systems. This file typically contains a list of public keys that are allowed to authenticate via SSH without requiring a password. The presence of a default public key means that anyone with knowledge of the corresponding private key can gain SSH access to the system.

Analysis of Related CVEs:

1. CVE-2016-5333 (VMware Photos OS OVA 1.0):
   - Affects versions before 2016-08-14
   - Allows remote attackers to obtain SSH access
   - Exploitable by leveraging knowledge of the private key

2. CVE-2016-1561 (ExaGrid appliances):
   - Affects firmware versions before 4.8 P26
   - Default SSH public key present in the authorized_keys file for the root user
   - Attackers can obtain SSH access by using a private key from another installation or firmware image

3. CVE-2015-0936 (Ceragon FibeAir IP-10):
   - Default SSH public key present in the authorized_keys file for the mateidu user
   - Allows remote attackers to obtain SSH access with knowledge of the private key

4. CVE-2023-49224 (Precor touchscreen consoles):
   - Affects models P62, P80, and P82
   - Default SSH public key present in the authorized_keys file
   - Allows remote attackers to gain root privileges

Potential Impact:
The presence of default SSH public keys in authorized_keys files poses severe security risks:

1. Unauthorized Access: Attackers with knowledge of the corresponding private key can gain SSH access to affected systems without authentication.
2. Privilege Escalation: In some cases (e.g., CVE-2023-49224), the vulnerability may allow attackers to obtain root privileges.
3. Data Breach: Unauthorized access could lead to theft or manipulation of sensitive data stored on the affected systems.
4. System Compromise: Attackers could potentially execute malicious commands, install backdoors, or use the compromised system as a pivot point for further attacks.
5. Confidentiality and Integrity Violations: The vulnerability compromises the confidentiality and integrity of the affected systems and any data they process or store.

Initial Recommendations for Mitigation:

1. Remove Default Keys: Immediately remove all default SSH public keys from the authorized_keys files on affected systems.
2. Update Firmware/Software: Apply the latest security patches and updates provided by the vendors to address this vulnerability.
3. Generate New Key Pairs: Create new, unique SSH key pairs for each system and user requiring SSH access.
4. Implement Strong Key Management: Establish processes for secure generation, distribution, and rotation of SSH keys.
5. Audit SSH Access: Regularly review and audit SSH access logs and authorized keys to detect and remove any unauthorized or outdated keys.
6. Network Segmentation: Implement network segmentation to limit SSH access to authorized networks and users only.
7. Implement Multi-Factor Authentication: Where possible, enable multi-factor authentication for SSH access to add an extra layer of security.
8. Security Training: Educate system administrators and users about the risks of using default or shared SSH keys and proper key management practices.

It is crucial for organizations using any of the affected products to take immediate action to address this vulnerability and prevent potential exploitation by malicious actors.